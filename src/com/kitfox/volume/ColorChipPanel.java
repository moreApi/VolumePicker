/*
 * ColorChipPanel.java
 * Created on Dec 24, 2009, 12:58:32 PM
 *
 * Volume Viewer - Display and manipulate 3D volumetric data
 * Copyright Â© 2009, Mark McKay
 * http://www.kitfox.com
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.kitfox.volume;

import java.awt.Color;
import java.awt.Graphics;

import javax.swing.JColorChooser;
import javax.vecmath.Color3f;

/**
 *
 * @author kitfox
 */
public class ColorChipPanel extends javax.swing.JPanel
{
    private static final long serialVersionUID = 0;

    protected Color3f chipColor = new Color3f(1, 1, 1);
    public static final String PROP_CHIPCOLOR = "chipColor";


    /** Creates new form ColorChipPanel */
    public ColorChipPanel() {
        initComponents();
    }

    @Override
    protected void paintComponent(Graphics g)
    {
        g.setColor(chipColor.get());
        g.fillRect(0, 0, getWidth(), getHeight());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setToolTipText("Click to change light color");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        Color newCol = 
                JColorChooser.showDialog(this, "Pick light color", chipColor.get());

        if (newCol == null)
        {
            return;
        }

        setChipColor(new Color3f(newCol));
    }//GEN-LAST:event_formMouseClicked

    /**
     * Get the value of chipColor
     *
     * @return the value of chipColor
     */
    public Color3f getChipColor()
    {
        return new Color3f(chipColor);
    }

    /**
     * Set the value of chipColor
     *
     * @param chipColor new value of chipColor
     */
    public void setChipColor(Color3f chipColor)
    {
//        if (this.chipColor.equals(chipColor))
//        {
//            return;
//        }
        Color3f oldChipColor = new Color3f(this.chipColor);
        this.chipColor.set(chipColor);
        firePropertyChange(PROP_CHIPCOLOR, oldChipColor, chipColor);
        repaint();
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
